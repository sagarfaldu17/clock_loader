on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
      - develop
name: "Build & Release"
jobs:
  build:
    name: Build & Release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.10.2'
      - run: flutter clean
      - run: flutter pub get
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "13.1"

      - name: Install Apple Certificate
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.P12_BASE64 }}
          p12-password: ${{ secrets.P12_PASSWORD }}

      - name: Install the provisioning profile
        env:
          PROVISIONING_CERTIFICATE_BASE64: ${{ secrets.MOBILEPROVISION_BASE64 }}
        run: |
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          echo -n "$PROVISIONING_CERTIFICATE_BASE64" | base64 --decode --output $PP_PATH
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Building iOS release
        run: |
          flutter build ios --release
       # zip -r app.ipa Payload


     # - name: collect ipa artifacts
     #   uses: actions/upload-artifact@v2
     #   with:
     #     name: release
     #     # Path to the release files
     #     path: ../Runner.app

#      - name: Cache IOS build
#        uses: actions/cache@v3
#        with:
#          path: |
#            ios
#          key: build-release

#      - name: Build resolve Swift dependencies
#        run: xcodebuild -resolvePackageDependencies -workspace ios/Runner.xcworkspace -scheme Runner -configuration Release
      - name: Build xArchive
        run: |
          xcodebuild archive -workspace ios/Runner.xcworkspace -scheme Runner -configuration Release DEVELOPMENT_TEAM=7224G6JACN -sdk 'iphoneos' -destination 'generic/platform=iOS' -archivePath build-output/app.xcarchive
#

      - name: check folder structure1
        run: cd build-output && ls

      - name: check folder structure2 | ios
        run: cd ios && ls

#      - name: check folder structure3 | build-output
#        run: cd .. && cd build-output && ls

#      - name: Export ipa
#        run: xcodebuild -exportArchive -archivePath build-output/app.xcarchive -exportPath build-output/ios -exportOptionsPlist ios/ExportOptions.plist
#
#      - name: collect ipa artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: release-ipa
#          # Path to the release files
#          path: build-output/ios

      - name: 'Upload app to TestFlight'
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: 'build-output/ios'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
      # - name: Cache Flutter dependencies
      #   uses: actions/cache@v1
      #   with:
      #     path: /Users/runner/hostedtoolcache/flutter
      #     key: ${{ runner.OS }}-flutter-install-cache-${{ env.flutter_version }}






# push to master, main, develop
# pull request on main master
