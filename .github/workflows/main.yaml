on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
      - develop
name: "Build & Release"
jobs:
  build:
    name: Build & Release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.10.2'
      - run: flutter clean
      - run: flutter pub get
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "13.1"

      - name: Install Apple Certificate
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.P12_BASE64 }}
          p12-password: ${{ secrets.P12_PASSWORD }}
#
      - name: Install the provisioning profile
        env:
          PROVISIONING_CERTIFICATE_BASE64: ${{ secrets.MOBILEPROVISION_BASE64 }}
        run: |
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          echo -n "$PROVISIONING_CERTIFICATE_BASE64" | base64 --decode --output $PP_PATH
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Building iOS release
        run: |
          flutter build ios --release
     #part1
      - name: Build xArchive
        run: |
          xcodebuild archive -workspace ios/Runner.xcworkspace -scheme Runner -configuration Release -archivePath build-output/app.xcarchive

#      - name: check ios folder 1st time
#        run: cd ios && ls

      - name: check ios folder
        run: cd ios && ls

#      - name: check build-output folder
#        run: cd build-output && ls

      - name: create ExportOptions.plist
        run: |
          #!/bin/bash
          VERSION=2.12
          cat > ios/ExportOptions.plist <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>provisioningProfiles</key>
            <dict>
              <key>com.mi.flutter</key>
              <string>88a729c2-4c3a-47d2-87f4-74ece1d50ace</string>
            </dict>
            <key>teamID</key>
            <string>7224G6JACN</string>
            <key>signingStyle</key>
            <string>automatic</string>
            <key>compileBitcode</key>
            <true/>
            <key>method</key>
            <string>app-store</string>
          </dict>
          </plist>
          EOF


      - name: check >> ExportOptions.plist is present at ios
        run: cd ios && ls


      - name: Export ipa
        run: xcodebuild -exportArchive -archivePath build-output/app.xcarchive -exportPath build-output/ios -exportOptionsPlist ios/ExportOptions.plist


      - name: collect ipa artifacts
        uses: actions/upload-artifact@v2
        with:
          name: release-ipa
          # Path to the release files
          path: build-output/ios


      - name: 'Upload app to TestFlight'
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: 'build-output/ios'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
      # - name: Cache Flutter dependencies
      #   uses: actions/cache@v1
      #   with:
      #     path: /Users/runner/hostedtoolcache/flutter
      #     key: ${{ runner.OS }}-flutter-install-cache-${{ env.flutter_version }}






# push to master, main, develop
# pull request on main master
